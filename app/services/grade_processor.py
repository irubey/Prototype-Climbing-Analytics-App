import pandas as pd
import numpy as np
from typing import Dict, List, Union

class GradeProcessor:
    """Handles all grade-related processing and conversions"""
    
    def __init__(self):
        self.binned_code_dict = { 
            1: ["5.0","5.0-","5.0+"], 
            2: ["5.1","5.1-","5.1+"],
            3: ["5.2","5.2-","5.2+"], 
            4: ["5.3","5.3-","5.3+"], 
            5: ["5.4","5.4-","5.4+"], 
            6: ["5.5","5.5-","5.5+"], 
            7: ["5.6","5.6-","5.6+"], 
            8: ["5.7","5.7-","5.7+"], 
            9: ["5.8","5.8-","5.8+"], 
            10: ["5.9","5.9-","5.9+"],
            11: ["5.10-","5.10a","5.10a/b"],
            12: ["5.10","5.10b","5.10c","5.10b/c"],
            13: ["5.10+","5.10c/d", "5.10d"],
            14: ["5.11-","5.11a","5.11a/b"],
            15: ["5.11","5.11b","5.11c","5.11b/c"],
            16: ["5.11+","5.11c/d", "5.11d"],
            17: ["5.12-","5.12a","5.12a/b"],
            18: ["5.12","5.12b","5.12c","5.12b/c"],
            19: ["5.12+","5.12c/d",  "5.12d"],
            20: ["5.13-","5.13a","5.13a/b"],
            21: ["5.13","5.13b","5.13c","5.13b/c"],
            22: ["5.13+", "5.13c/d", "5.13d"],
            23: ["5.14-","5.14a","5.14a/b"],
            24: ["5.14","5.14b","5.14c","5.14b/c"],
            25: [ "5.14+","5.14c/d", "5.14d"],
            26: ["5.15-","5.15a","5.15a/b"],
            27: ["5.15","5.15b","5.15c","5.15b/c"],
            28: ["5.15+","5.15c/d",  "5.15d"],
            101: ["V-easy"],
            102: ["V0","V0-","V0+","V0-1"],
            103: ["V1","V1-","V1+","V1-2"],
            104: ["V2","V2-","V2+","V2-3"],
            105: ["V3","V3-","V3+","V3-4"],
            106: ["V4","V4-","V4+","V4-5"],
            107: ["V5","V5-","V5+","V5-6"],
            108: ["V6","V6-","V6+","V6-7"],
            109: ["V7","V7-","V7+","V7-8"],
            110: ["V8","V8-","V8+","V8-9"],
            111: ["V9","V9-","V9+","V9-10"],
            112: ["V10","V10-","V10+","V10-11"],
            113: ["V11","V11-","V11+","V11-12"],
            114: ["V12","V12-","V12+","V12-13"],
            115: ["V13","V13-","V13+","V13-14"],
            116: ["V14","V14-","V14+","V14-15"],
            117: ["V15","V15-","V15+","V15-16"],
            118: ["V16","V16-","V16+"],
            119: ["V17","V17-","V17+"],
            120: ["V18"],
            201: ["WI1"],
            202: ["WI2"],
            203: ["WI3"],
            204: ["WI4"],
            205: ["WI5"],
            206: ["WI6"],
            207: ["WI7"],
            208: ["WI8"],
            301: ["M1"],
            302: ["M2"],
            303: ["M3"],
            304: ["M4"],
            305: ["M5"],
            306: ["M6"],
            307: ["M7"],
            308: ["M8"],
            309: ["M9"],
            310: ["M10"],
            311: ["M11"],
            312: ["M12"],
            313: ["M13"],
            314: ["M14"],
            315: ["M15"],
            316: ["M16"],
            317: ["M17"],
            318: ["M18"],
            319: ["M19"],
            401: ["A0"],
            402: ["A1"],
            403: ["A2"],
            404: ["A3"],
            405: ["A4"],
            501: ["3rd"],
            502: ["4th"],
            503: ["5th"],
            601: ["Snow"],
            701: ["C0"],
            702: ["C1"],
            703: ["C2"],
            704: ["C3"],
            705: ["C4"],
            801: ["AI0"],
            802: ["AI1"],
            803: ["AI2"],
            804: ["AI3"],
            805: ["AI4"]
        }
        
        self.routes_grade_list = [
            "5.0-","5.0","5.0+","5.1-","5.1","5.1+",
            "5.2-","5.2","5.2+","5.3-","5.3","5.3+",
            "5.4-","5.4","5.4+","5.5-","5.5","5.5+",
            "5.6-","5.6","5.6+","5.7-","5.7","5.7+",
            "5.8-","5.8","5.8+","5.9-","5.9","5.9+",
            "5.10a","5.10-","5.10a/b","5.10b","5.10", 
            "5.10b/c", "5.10c","5.10c/d","5.10+", "5.10d",
            "5.11a","5.11-","5.11a/b","5.11b","5.11", 
            "5.11b/c", "5.11c","5.11c/d","5.11+", "5.11d",
            "5.12a","5.12-","5.12a/b","5.12b","5.12", 
            "5.12b/c", "5.12c","5.12c/d","5.12+", "5.12d",
            "5.13a","5.13-","5.13a/b","5.13b","5.13", 
            "5.13b/c", "5.13c","5.13c/d","5.13+", "5.13d",
            "5.14a","5.14-","5.14a/b","5.14b","5.14", 
            "5.14b/c", "5.14c","5.14c/d","5.14+", "5.14d",
            "5.15a","5.15-","5.15a/b","5.15b","5.15", 
            "5.15b/c", "5.15c","5.15c/d","5.15+", "5.15d"
        ]
        
        self.boulders_grade_list = [
            "V-easy", 
            "V0-","V0","V0+","V0-1",
            "V1-","V1","V1+","V1-2",
            "V2-","V2","V2+","V2-3",
            "V3-","V3","V3+","V3-4",
            "V4-","V4","V4+","V4-5",
            "V5-","V5","V5+","V5-6",
            "V6-","V6","V6+","V6-7",
            "V7-","V7","V7+","V7-8",
            "V8-","V8","V8+","V8-9",
            "V9-","V9","V9+","V9-10",
            "V10-","V10","V10+","V10-11",
            "V11-","V11","V11+","V11-12",
            "V12-","V12","V12+","V12-13",
            "V13-","V13","V13+","V13-14",
            "V14-","V14","V14+","V14-15",
            "V15-","V15","V15+","V15-16",
            "V16-","V16","V16+",
            "V17-","V17","V17+",
        ]
    
    def convert_grades_to_codes(self, grades: List[str]) -> List[int]:
        """Convert climbing grades to numeric codes"""
        grades = [str(grade) if grade is not None else 'unknown' for grade in grades]
        
        binned_code_lst = []
        for grade in grades:
            grade_prefix = grade.split(' ')[0]
            code = 0  # default value
            
            for key, values in self.binned_code_dict.items():
                if any(substring == grade_prefix for substring in values):
                    code = key
                    break
                    
            binned_code_lst.append(code)
            
        return binned_code_lst
    
    def get_grade_from_code(self, code: int) -> str:
        """Convert numeric code back to grade"""
        return self.binned_code_dict.get(code, [''])[0] 
        
    def get_grade_sorting_list(self, discipline: str) -> List[str]:
        """Get the appropriate grade sorting list for a discipline"""
        if discipline in ['sport', 'trad']:
            return self.routes_grade_list
        elif discipline == 'boulder':
            return self.boulders_grade_list
        else:
            return []